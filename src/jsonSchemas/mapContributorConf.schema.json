{
    "$schema": "http://json-schema.org/draft-06/schema#",
    "title": "Map Contributor Configuration",
    "description": "The Configuration of Map Contributor",
    "type": "object",
    "$id": "mapContributorConf.schema.json",
    "allOf": [
        {
            "$ref": "rootContributorConf.schema.json#"
        }
    ],
    "properties": {
        "idFieldName": {
            "description": "Id of entity to show on Map",
            "type": "string"
        },
        "includeFeaturesFields": {
            "description": "List of fields pattern or names that will be included in features mode as geojson properties.",
            "type": "array",
            "items": {
                "description": "Field pattern or name",
                "type": "string"
            }
        },
        "normalizationFields": {
            "description": "List of numeric or date fields patterns or names which values are normalized. The fields values can be normalized locally on the current extent OR globally considering the current filters. Also you can normalize fields values (locally or globally) per a given key : For instance I want to normalize the speed of boats for each boat id. **Note** : Global normalization is only possible per a given key.",
            "type": "array",
            "items": {
                "description": "Field pattern or name",
                "type": "object",
                "properties": {
                    "on": {
                        "description": "The **date** of **numeric** field which values are normalized",
                        "type": "string"
                    },
                    "scope": {
                        "description": "`global` or `local`. `global` scope means a normalization considering all the data. `local` scope means a normalization considering the data on the current map extent only.",
                        "type": "string"
                    },
                    "per": {
                        "description": "Optional. **keyword** field that allows to normalize the `on` field values per keyword. A keyword being a value of the '`per`' field.",
                        "type": "string"
                    },
                    "keysSize": {
                        "description": "Optional, works in combination with `per`. Number of `per` keywords to use. Defaults to 100. Maximum is 10000.",
                        "type": "number"
                    }
                }
            }
        },
        "initZoom": {
            "description": "Initial zoom of  Map",
            "type": "number"
        },
        "geoQueryField": {
            "description": "Geometry field use for geo query",
            "type": "string"
        },
        "geoQueryOp": {
            "description": "Operator  use for geo query",
            "enum": [
                "Within",
                "NotWithin",
                "Intersects",
                "NotIntersects"
            ]
        },
        "geomStrategy": {
            "description": "Geometry method of representation for aggregate data",
            "enum": [
                "bbox",
                "centroid",
                "first",
                "last",
                "byDefault",
                "geohash"
            ]
        },
        "isFlat": {
            "description": "If true, geosjon properties will be flat, true by default",
            "type": "boolean"
        },
        "zoomLevelFullData": {
            "description": "Max zoom to retrieve all world data",
            "type": "number"
        },
        "zoomLevelForTestCount": {
            "description": "Zoom from which we test to retrieve data without aggregation",
            "type": "number"
        },
        "nbMaxDefautFeatureForCluster": {
            "description": "Defaut number of features below which we show data without agrgegation",
            "type": "number"
        },
        "zoomToNbMaxFeatureForCluster": {
            "description": "List of couple zoom-number to associate a number of features below which we show data without agrgegation for each zoom",
            "type": "array",
            "items": {
                "type": "array",
                "minItems": 2,
                "maxItems": 2,
                "items": [
                    {
                        "description": "Zoom value",
                        "type": "number"
                    },
                    {
                        "description": "Number of features below which we show data without agrgegation",
                        "type": "number"
                    }
                ]
            }
        },
        "maxPrecision": {
            "type": "array",
            "minItems": 2,
            "maxItems": 2,
            "items": [
                {
                    "description": "Precision of geohash aggregation",
                    "type": "number"
                },
                {
                    "description": "Level of geohash to retrieve data like tile",
                    "type": "number"
                }
            ]
        },
        "zoomToPrecisionCluster": {
            "description": "List of triplet zoom-precison-level to associate a couple precision-level for each zoom",
            "type": "array",
            "items": {
                "type": "array",
                "minItems": 3,
                "maxItems": 3,
                "items": [
                    {
                        "description": "Zoom value",
                        "type": "number"
                    },
                    {
                        "description": "Precision of geohash aggregation",
                        "type": "number"
                    },
                    {
                        "description": "Level of geohash to retrieve data like tile",
                        "type": "number"
                    }
                ]
            }
        },
        "drawPrecision": {
            "description": "Number of  digits after the decimal point for coordinates in geosjon used for filter",
            "type": "number"
        },
        "dataMode": {
            "description": "Initial mode of the contributor : dynamic is the classic cluster/feature mode, simple si always feature mode",
            "enum": [
                "simple",
                "dynamic"
            ]
        },
        "fetchType": {
            "description": "Type of initial mode of fetching data",
            "enum": [
                "tile",
                "geohash"
            ]
        },
        "searchSort": {
            "description": "Separated comma field to defined the order of te search",
            "type": "string"
        },
        "searchSize": {
            "description": "Number of  features return by a geosearch",
            "type": "number"
        }
    },
    "required": [
        "idFieldName",
        "initZoom",
        "geomStrategy",
        "zoomLevelFullData",
        "zoomLevelForTestCount",
        "nbMaxDefautFeatureForCluster",
        "zoomToNbMaxFeatureForCluster",
        "maxPrecision",
        "zoomToPrecisionCluster"
    ]
}