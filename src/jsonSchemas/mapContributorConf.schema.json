{
    "$schema": "http://json-schema.org/draft-06/schema#",
    "title": "Map Contributor Configuration",
    "description": "The Configuration of Map Contributor",
    "type": "object",
    "$id": "mapContributorConf.schema.json",
    "allOf": [
        {
            "$ref": "rootContributorConf.schema.json#"
        }
    ],
    "properties": {
        "layers_sources": {
            "description": "List of layer_source objects that describe the data source needed to display a layer of data on the map.",
            "type": "array",
            "items": {
                "description": "object that describes the data source needed to display a layer of data on the map",
                "type": "object",
                "properties": {
                    "id": {
                        "description": "Identifier of the layer.",
                        "type": "string"
                    },
                    "source": {
                        "description": "Type of the data - concat - id.",
                        "type": "string"
                    },
                    "maxzoom": {
                        "description": "Maximum zoom level beyond which the layer is no longer displayed.",
                        "type": "number"
                    },
                    "minzoom": {
                        "description": "Minimum zoom level below which the layer is no longer displayed.",
                        "type": "number"
                    },
                    "maxfeatures": {
                        "description": "Maximum number of features displayed on the map, below which the layer is no longer displayed. To be specified for `feature` and `feature-metric` sources",
                        "type": "number"
                    },
                    "minfeatures": {
                        "description": "Minimum number of features that a geoaggregation represents as clusters. below this value a `cluster` layer is no longer displayed on the map.",
                        "type": "number"
                    },
                    "returned_geometry": {
                        "description": "`geo-point` or a `geo-shape` field to display on the map for a feature layer",
                        "type": "string"
                    },
                    "include_fields": {
                        "description": "List of fields to include in `feature` source that allow a data-driven styling of the layer",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "provided_fields": {
                        "description": "List of color fields and their label fields",
                        "type": "array",
                        "items": {
                            "properties": {
                                "color": {
                                    "description": "Color field",
                                    "type": "string"
                                },
                                "label": {
                                    "description": "label field",
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "colors_from_fields": {
                        "description": "a list of fields whose values will be transformed to colors, thanks to ARLAS-color-service, and used for a data-driven colouring of the layer features.",
                        "type": "array",
                        "items": {
                            "description": "field whose values will be transformed to colors, thanks to ARLAS-color-service, and used for a data-driven colouring of the layer features.",
                            "type": "string"
                        }
                    },
                    "normalization_fields": {
                        "description": "List of numeric or date fields patterns or names whose values are normalized. The fields values can be normalized locally on the current map extent OR globally; considering the current filters. Also you can normalize fields values (locally or globally) per a given key : For instance I want to normalize the speed of boats for each boat id. **Note** : Global normalization is only possible per a given key.",
                        "type": "array",
                        "items": {
                            "description": "Field pattern or name",
                            "type": "object",
                            "properties": {
                                "on": {
                                    "description": "The **date** of **numeric** field whose values are normalized",
                                    "type": "string"
                                },
                                "per": {
                                    "description": "Optional. **keyword** field that allows to normalize the `on` field values per keyword. A keyword being a value of the '`per`' field.",
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "agg_geo_field": {
                        "description": "This `geo-point` field is used when geo-aggregating data on a geohash grid. The data on each cell of the grid will be aggregated by this field.",
                        "type": "string"
                    },
                    "granularity": {
                        "description": "Describes how precise the geo-aggregation is. Possible: Coarse, Medium, Fine, Finest",
                        "type": "string",
                        "enum": [
                            "Coarse",
                            "Fine",
                            "Finest",
                            "Medium"
                        ]
                    },
                    "aggregated_geometry": {
                        "description": "Corresponds to the geometry that reprensents the aggregated data on each cell of a geo-aggregation. It's called aggregated geometry because it has the following possible values: geohash_center, geohash, bbox, centroid.",
                        "type": "string",
                        "enum": [
                            "bbox",
                            "centroid",
                            "cell",
                            "cell_center",
                            "geohash",
                            "geohash_center"
                        ]
                    },
                    "raw_geometry": {
                        "description": "Corresponds to the geometry that represents the aggregated data on each cell of a geo-aggregation. This geometry should be a `geo-point` or a `geo-shape` geometry of a document that will be representing all the cell.",
                        "type": "object",
                        "properties": {
                            "geometry": {
                                "description": "`geo-point` or a `geo-shape` field of the document that will be representing each bucket (cell) of the grid",
                                "type": "string"
                            },
                            "sort": {
                                "description": "Comma separated fields on which documents within the cell are sorted. The first resulted document of this sort is the one representing the cell.",
                                "type": "string"
                            }
                        }
                    },
                    "metrics": {
                        "description": "List of metrics that are calculated inside each aggregation bucket",
                        "type": "array",
                        "items": {
                            "description": "metric that is calculated inside each aggregation bucket",
                            "type": "object",
                            "properties": {
                                "field": {
                                    "description": "Field on which the metric is calculated",
                                    "type": "string"
                                },
                                "metric": {
                                    "description": "The metric to calculate. Possible values are: avg | min | max | sum | count",
                                    "type": "string",
                                    "enum": [
                                        "avg",
                                        "min",
                                        "max",
                                        "sum",
                                        "count",
                                        "cardinality"
                                    ]
                                },
                                "normalize": {
                                    "description": "If specified, it normalizes the metrics above locally to the current map extend or globally",
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "geometry_id": {
                        "description": "A keyword field that identifies a set of similar geometries",
                        "type": "string"
                    }, 
                    "geomeetry_support": {
                        "description": "A `geo-point` or `geo-shape` field that represents the geometry_id"
                    }
                }
            }
        },
        "geo_query_field": {
            "description": "Geometry field used for geo query",
            "type": "string"
        },
        "geo_query_op": {
            "description": "Operator  used for geo query",
            "enum": [
                "Within",
                "NotWithin",
                "Intersects",
                "NotIntersects"
            ]
        },
        "isFlat": {
            "description": "If true, geosjon properties will be flat, true by default",
            "type": "boolean"
        },
        "draw_precision": {
            "description": "Number of  digits after the decimal point for coordinates in geosjon used for filter",
            "type": "number"
        },
        "data_mode": {
            "description": "Initial mode of the contributor : dynamic is the classic cluster/feature mode, simple si always feature mode",
            "enum": [
                "simple",
                "dynamic"
            ]
        },
        "simple_mode_accumulative": {
            "description": "Indicates whether rendered old data is kept or removed when onMove event is triggered. Taken into account only when data_mode = simple.",
            "type": "boolean"
        },
        "search_sort": {
            "description": "Separated comma field to defined the order of te search",
            "type": "string"
        },
        "search_size": {
            "description": "Number of  features return by a geosearch",
            "type": "number"
        },
        "network_fetching_level": {
            "description": "Zoom level 'Z' of the XYZ grid, used to fetch network analytics data",
            "type": "number"
        }
    },
    "required": [
        "layers_sources"
    ]
}